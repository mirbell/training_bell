---
title: "Data Visualization"
format: html
---

## Getting the data ready

```{r}
library(readr)
library(dplyr)
library(tidyr)
library(forcats) # makes working with factors easier
library(ggplot2)
library(leaflet) # interactive maps
library(DT) # interactive tables
library(scales) # scale functions for visualization
library(janitor) # expedite cleaning and exploring data
library(viridis) # colorblind friendly color palette
```

## Add Data
```{r}
delta_visits_raw <- read_csv("https://portal.edirepository.org/nis/dataviewer?packageid=edi.587.1&entityid=cda8c1384af0089b506d51ad8507641f")
```


## Explore the data

```{r}

colnames(delta_visits_raw)

#peak at each column and class 

glimpse(delta_visits_raw)

range(delta_visits_raw$Date)

unique(delta_visits_raw$Time_of_Day)


```
## Cleaning names

```{r}
##transform names to the same format

delta_visits <- delta_visits_raw %>% 
  janitor::clean_names()

```


## Convert to long format

```{r}
visits_long <- delta_visits %>% 
    pivot_longer(cols = c(sm_boat, med_boat, lrg_boat, bank_angler, scientist, cars),
                 names_to = "visitor_type",
                 values_to = "quantity") %>%
    rename(restore_loc = eco_restore_approximate_location) %>% 
    select(-notes)

## Checking the outcome
head(visits_long)
```


##Calculations

```{r}
#calculate the daily visits by restore_loc, date, and visitor_type

daily_visits_loc<-visits_long %>% 
  group_by(restore_loc, date, visitor_type) %>% 
  summarize(daily_visits = sum(quantity))

head(daily_visits_loc)


```


## Plotting with ggplot2

### Essential components

```{r}
## Option 1 - data and mapping called in the ggplot() function
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits))+
    geom_col()


## Option 2 - data called in ggplot function; mapping called in geom
ggplot(data = daily_visits_loc) +
    geom_col(aes(x = restore_loc, y = daily_visits))


## Option 3 - data and mapping called in geom
ggplot() +
    geom_col(data = daily_visits_loc,
             aes(x = restore_loc, y = daily_visits))
```

### Boxplot

```{r}

```



###Violin plot


```{r}
daily_visits_loc %>%
    separate(date, c("year", "month", "day"), sep = "-") %>%
    filter(daily_visits < 30,
           visitor_type %in% c("sm_boat", "med_boat", "lrg_boat")) %>%
    ggplot(aes(x = visitor_type, y = daily_visits)) +
    geom_violin()
```


### Lineplot

```{r}
daily_visits_loc %>%
    filter(restore_loc == "Decker Island",
           visitor_type == "med_boat") %>%
    ggplot(aes(x = date, y = daily_visits)) +
    geom_line() +
    geom_point()
```


### Customizing our plot

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits
           ))+
    geom_col(fill = "blue")
```

### more custmomizations

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()
```


## Making titles and adjusting labels

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    theme_bw()+
    theme(legend.position = "bottom",
          axis.ticks.y = element_blank()) ## note we mention y-axis here
```


## Custom theme

```{r}

my_theme <- theme_bw(base_size = 16) +
    theme(legend.position = "bottom",
          axis.ticks.y = element_blank())

ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    my_theme
```

### adjusting breaks

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    scale_y_continuous(breaks = seq(0,120, 20))+
    my_theme
```



### Removing indent 

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    scale_y_continuous(breaks = seq(0,120, 20), expand = c(0,0))+
    my_theme
```

### Reordering things

```{r}
daily_visits_totals <- daily_visits_loc %>% 
    group_by(restore_loc) %>%
    mutate(n = sum(daily_visits)) %>% 
    ungroup()

head(daily_visits_totals)
```


### Making an ordered bar chart

```{r}
ggplot(data = daily_visits_totals,
       #fct_reorder orders bars from great to least
       aes(x = fct_reorder(restore_loc, n), y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    scale_y_continuous(breaks = seq(0,120, 20), expand = c(0,0))+
    my_theme
```


### Descending order

```{r}
ggplot(data = daily_visits_totals,
       aes(x = fct_reorder(restore_loc, desc(n)), y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    scale_y_continuous(breaks = seq(0,120, 20), expand = c(0,0))+
    my_theme
```


## Changing color palettes

```{r}
ggplot(data = daily_visits_totals,
       aes(x = fct_reorder(restore_loc, desc(n)), y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    scale_fill_viridis_d()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    scale_y_continuous(breaks = seq(0,120, 20), expand = c(0,0))+
    my_theme
```


### How to save

```{r}
##had to save in the console

ggsave("plots/visit_restore_site_delta.jpg", width = 12, height = 6, units = "in")
```



